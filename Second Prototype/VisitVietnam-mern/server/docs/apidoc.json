{
  "openapi": "3.0.0",
  "info": {
    "title": "API doc of Places",
    "description": "API doc of Places",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/challengecup/places/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://localhost:5000",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/places": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get places",
        "description": "Places\n",
        "operationId": "Places",
        "responses": {
          "200": {
            "description": "A list of places log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/places/add": {
      "post": {
        "tags": [
          "Places"
        ],
        "summary": "Create a new place log",
        "description": "Create new place",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/places_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new place"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/places/{id}": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Get a place log by ID",
        "description": "Get a place log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single place log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Place"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Places"
        ],
        "summary": "Delete a place log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Place log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/places/update/{id}": {
      "put": {
        "tags": [
          "Places"
        ],
        "summary": "Update a place log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exercise log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Place"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/places/getPlaceBitexco": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get place of Bitexco",
        "description": "Place of Bitexco\n",
        "operationId": "617e614158d5ae4aac34708c",
        "responses": {
          "200": {
            "description": "Information place of Bitexco log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getPlaceBenThanhMarket": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get place of Ben Thanh market",
        "description": "Place of Ben Thanh market\n",
        "operationId": "6185ee0db597ff9050ace5d8",
        "responses": {
          "200": {
            "description": "Information place of Ben Thanh market log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getPlaceDamSenPark": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get place of Dam Sen park",
        "description": "Place of Dam Sen park\n",
        "operationId": "6185ee40b597ff9050ace5d9",
        "responses": {
          "200": {
            "description": "Information place of Dam Sen park log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getPlaceTheLandmark81": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get place of The Landmark81",
        "description": "Place of The Landmark81\n",
        "operationId": "6185ee61b597ff9050ace5da",
        "responses": {
          "200": {
            "description": "Information place of The Landmark81 log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getPlaceTheCityPostOffice": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get place of The City Post Office",
        "description": "Place of The City Post Office\n",
        "operationId": "6185f505b597ff9050ace5db",
        "responses": {
          "200": {
            "description": "Information place of The City Post Office log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getPlaceTheWalkingStreet": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get place of The Walking Street",
        "description": "Place of The Walking Street\n",
        "operationId": "6186958578c76ac32a8edf2f",
        "responses": {
          "200": {
            "description": "Information place of The Walking Street log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getAllPlacesFood": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get all places of Food",
        "description": "All places of Food\n",
        "operationId": "getAllPlacesFood",
        "responses": {
          "200": {
            "description": "All places of Food log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getAllPlacesSouvenir": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get all places Souvenir",
        "description": "All places of Souvenir\n",
        "operationId": "getAllPlacesSouvenir",
        "responses": {
          "200": {
            "description": "All places of Souvenir log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/places/getAllPlacesOutfit": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "get all places Outfit",
        "description": "All places of Outfit\n",
        "operationId": "getAllPlacesOutfit",
        "responses": {
          "200": {
            "description": "All places of Outfit log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "get articles",
        "description": "Articles\n",
        "operationId": "articles",
        "responses": {
          "200": {
            "description": "A list of articles log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/articles/add": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Create a new article log",
        "description": "Create new article",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/articles_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new article"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/articles/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get a article log by ID",
        "description": "Get a article log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single article log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Delete a article log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/articles/update/{id}": {
      "put": {
        "tags": [
          "Articles"
        ],
        "summary": "Update a article log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/articles/getAllArticleTopPickMaster": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "get All Article Top Pick Master",
        "description": "All Article Top Pick Master\n",
        "operationId": "getAllArticleTopPickMaster",
        "responses": {
          "200": {
            "description": "All Article Top Pick Master log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/articles/getAllArticleEvent": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "get All Article Event",
        "description": "All Article Event\n",
        "operationId": "getAllArticleEvent",
        "responses": {
          "200": {
            "description": "All Article Event log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "get events",
        "description": "Events\n",
        "operationId": "Events",
        "responses": {
          "200": {
            "description": "A list of events log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_2"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/events/add": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create a new event log",
        "description": "Create new event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/events_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new event"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a event log by ID",
        "description": "Get a event log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single event log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete a event log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/events/update/{id}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Update a event log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/foods": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "get foods",
        "description": "Foods\n",
        "operationId": "Foods",
        "responses": {
          "200": {
            "description": "A list of foods log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/foods/add": {
      "post": {
        "tags": [
          "Foods"
        ],
        "summary": "Create a new food log",
        "description": "Create new food",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/foods_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new food"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/foods/{id}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Get a food log by ID",
        "description": "Get a food log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single food log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Food"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Foods"
        ],
        "summary": "Delete a food log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Food log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/foods/update/{id}": {
      "put": {
        "tags": [
          "Foods"
        ],
        "summary": "Update a food log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Food log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Food"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/foods/getAllFood": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "get All Foods",
        "description": "All Foods\n",
        "operationId": "getAllFood",
        "responses": {
          "200": {
            "description": "All foods log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/foods/getAllCake": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "get All Cakes",
        "description": "All Cakes\n",
        "operationId": "getAllCake",
        "responses": {
          "200": {
            "description": "All cakes log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/foods/getAllDrink": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "get All Drink",
        "description": "All Drink\n",
        "operationId": "getAllDrink",
        "responses": {
          "200": {
            "description": "All drink log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/holidays": {
      "get": {
        "tags": [
          "Holidays"
        ],
        "summary": "get holidays",
        "description": "Holidays\n",
        "operationId": "Holidays",
        "responses": {
          "200": {
            "description": "A list of holidays log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/holidays/add": {
      "post": {
        "tags": [
          "Holidays"
        ],
        "summary": "Create a new holiday log",
        "description": "Create new holiday",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/holidays_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new holiday"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/holidays/{id}": {
      "get": {
        "tags": [
          "Holidays"
        ],
        "summary": "Get a holiday log by ID",
        "description": "Get a holiday log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single holiday log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Holiday"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Holidays"
        ],
        "summary": "Delete a holiday log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Holiday log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/holidays/update/{id}": {
      "put": {
        "tags": [
          "Holidays"
        ],
        "summary": "Update a holiday log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Holiday log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Holiday"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/holidays/get4HolidayUpcoming": {
      "get": {
        "tags": [
          "Holidays"
        ],
        "summary": "get for holiday upcoming",
        "description": "Holidays upcoming\n",
        "operationId": "get4HolidayUpcoming",
        "responses": {
          "200": {
            "description": "A list of holidays upcoming log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "get locations",
        "description": "Locations\n",
        "operationId": "Locations",
        "responses": {
          "200": {
            "description": "A list of locations log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_5"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/locations/add": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create a new location log",
        "description": "Create new location",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/locations_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new location"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get a location log by ID",
        "description": "Get a location log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single location log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete a location log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/locations/update/{id}": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Update a location log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "location log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/outfits": {
      "get": {
        "tags": [
          "Outfits"
        ],
        "summary": "get outfits",
        "description": "Outfits\n",
        "operationId": "Outfits",
        "responses": {
          "200": {
            "description": "A list of outfits log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_6"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/outfits/add": {
      "post": {
        "tags": [
          "Outfits"
        ],
        "summary": "Create a new outfit log",
        "description": "Create new outfit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/outfits_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new outfit"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/outfits/{id}": {
      "get": {
        "tags": [
          "Outfits"
        ],
        "summary": "Get a outfit log by ID",
        "description": "Get a outfit log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single outfit log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outfit"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Outfits"
        ],
        "summary": "Delete a outfit log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Outfit log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/outfits/update/{id}": {
      "put": {
        "tags": [
          "Outfits"
        ],
        "summary": "Update a outfit log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "outfit log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outfit"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/outfits/getAllBrand": {
      "get": {
        "tags": [
          "Outfits"
        ],
        "summary": "get all brands",
        "description": "All brands\n",
        "operationId": "getAllBrand",
        "responses": {
          "200": {
            "description": "A list of all brands log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_6"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/outfits/getAllOutfit": {
      "get": {
        "tags": [
          "Outfits"
        ],
        "summary": "get all outfits",
        "description": "All outfits\n",
        "operationId": "getAllOutfit",
        "responses": {
          "200": {
            "description": "A list of all outfits log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_6"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/residences": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "get residences",
        "description": "Residences\n",
        "operationId": "Residences",
        "responses": {
          "200": {
            "description": "A list of residences log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/residences/add": {
      "post": {
        "tags": [
          "Residences"
        ],
        "summary": "Create a new residence log",
        "description": "Create new residence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/residences_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new residence"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/residences/{id}": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "Get a residence log by ID",
        "description": "Get a residence log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single residence log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Residence"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Residences"
        ],
        "summary": "Delete a residence log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Residence log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/residences/update/{id}": {
      "put": {
        "tags": [
          "Residences"
        ],
        "summary": "Update a residence log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "residence log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Residence"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/residences/getAllHotel": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "get all hotel",
        "description": "All hotel\n",
        "operationId": "getAllHotel",
        "responses": {
          "200": {
            "description": "A list of all hotel log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/residences/getAllHostel": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "get all hostel",
        "description": "All hostel\n",
        "operationId": "getAllHostel",
        "responses": {
          "200": {
            "description": "A list of all hostel log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/residences/getAllHomestay": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "get all homestay",
        "description": "All homestay\n",
        "operationId": "getAllHomestay",
        "responses": {
          "200": {
            "description": "A list of all homestay log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/residences/getAllVilla": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "get all villa",
        "description": "All villa\n",
        "operationId": "getAllVilla",
        "responses": {
          "200": {
            "description": "A list of all villa log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/residences/getAllBungalow": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "get all bungalow",
        "description": "All bungalow\n",
        "operationId": "getAllBungalow",
        "responses": {
          "200": {
            "description": "A list of all bungalow log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/residences/getAllResort": {
      "get": {
        "tags": [
          "Residences"
        ],
        "summary": "get all resort",
        "description": "All resort\n",
        "operationId": "getAllResort",
        "responses": {
          "200": {
            "description": "A list of all resort log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "get reviews",
        "description": "Reviews\n",
        "operationId": "Reviews",
        "responses": {
          "200": {
            "description": "A list of review log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_8"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/reviews/add": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Create a new review log",
        "description": "Create new review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reviews_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new review"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get a review log by ID",
        "description": "Get a review log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single review log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Delete a review log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/reviews/update/{id}": {
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "Update a review log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "review log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/souvenirs": {
      "get": {
        "tags": [
          "Souvenirs"
        ],
        "summary": "get souvenirs",
        "description": "Souvenirs\n",
        "operationId": "Souvenirs",
        "responses": {
          "200": {
            "description": "A list of souvenirs log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_9"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/souvenirs/add": {
      "post": {
        "tags": [
          "Souvenirs"
        ],
        "summary": "Create a new souvenir log",
        "description": "Create new souvenir",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/souvenirs_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new souvenir"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/souvenirs/{id}": {
      "get": {
        "tags": [
          "Souvenirs"
        ],
        "summary": "Get a souvenir log by ID",
        "description": "Get a souvenir log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single souvenir log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Souvenir"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Souvenirs"
        ],
        "summary": "Delete a souvenir log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Souvenir log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/souvenirs/update/{id}": {
      "put": {
        "tags": [
          "Souvenirs"
        ],
        "summary": "Update a souvenir log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "souvenir log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Souvenir"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get users",
        "description": "Users\n",
        "operationId": "Users",
        "responses": {
          "200": {
            "description": "A list of users log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_10"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/users/add": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user log",
        "description": "Create new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_add_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new user"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user log by ID",
        "description": "Get a user log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User log was successfully deleted."
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/users/update/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user log was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Have some error."
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create a new auth log",
        "description": "Create new auth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_register_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new auth"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_login_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a new auth"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auth": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "get auth",
        "description": "Auth\n",
        "operationId": "Auth",
        "responses": {
          "200": {
            "description": "A list of auth log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_10"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Place": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the place id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of place"
          },
          "type": {
            "type": "string",
            "description": "type of place"
          },
          "slogan": {
            "type": "string",
            "description": "slogan of place"
          },
          "overview": {
            "type": "string",
            "description": "overview about place"
          },
          "phone": {
            "type": "string",
            "description": "phone of place"
          },
          "email": {
            "type": "string",
            "description": "email of place"
          },
          "facebook": {
            "type": "string",
            "description": "facebook of place"
          },
          "linkweb": {
            "type": "string",
            "description": "website of place"
          },
          "eventofplace": {
            "type": "number",
            "description": "amount of event for place"
          },
          "likecount": {
            "type": "number",
            "description": "amount interested of place"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of place"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the article id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of article"
          },
          "type": {
            "type": "string",
            "description": "type of article"
          },
          "description": {
            "type": "string",
            "description": "description of article"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of article"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the event id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of event"
          },
          "type": {
            "type": "string",
            "description": "type of event"
          },
          "description": {
            "type": "string",
            "description": "description of event"
          },
          "details": {
            "type": "string",
            "description": "details of event"
          },
          "startdate": {
            "type": "string",
            "description": "start date of event"
          },
          "enddate": {
            "type": "string",
            "description": "end date of event"
          },
          "status": {
            "type": "string",
            "description": "status of event"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of event"
          },
          "placeid": {
            "type": "string",
            "description": "place id of event"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Food": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the food id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of food"
          },
          "type": {
            "type": "string",
            "description": "type of food"
          },
          "miniType": {
            "type": "string",
            "description": "type of food"
          },
          "price": {
            "type": "string",
            "description": "price of food"
          },
          "note": {
            "type": "string",
            "description": "note of food"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of food"
          },
          "placeid": {
            "type": "string",
            "description": "place id of food"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Holiday": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the holiday id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of holiday"
          },
          "type": {
            "type": "string",
            "description": "type of holiday"
          },
          "description": {
            "type": "string",
            "description": "description of holiday"
          },
          "details": {
            "type": "string",
            "description": "details of holiday"
          },
          "startdate": {
            "type": "string",
            "description": "start date of holiday"
          },
          "enddate": {
            "type": "string",
            "description": "end date of holiday"
          },
          "status": {
            "type": "string",
            "description": "status of holiday"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of holiday"
          },
          "locationid": {
            "type": "string",
            "description": "location id of holiday"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the location id",
            "format": "id"
          },
          "details": {
            "type": "string",
            "description": "details of location"
          },
          "street": {
            "type": "string",
            "description": "street of location"
          },
          "ward": {
            "type": "string",
            "description": "ward of location"
          },
          "district": {
            "type": "string",
            "description": "district of location"
          },
          "city": {
            "type": "string",
            "description": "city of location"
          },
          "placeId": {
            "type": "string",
            "description": "place id of location"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Outfit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the outfit id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of outfit"
          },
          "type": {
            "type": "string",
            "description": "type of outfit"
          },
          "gender": {
            "type": "string",
            "description": "gender of outfit"
          },
          "rangeAge": {
            "type": "string",
            "description": "range age of outfit"
          },
          "price": {
            "type": "string",
            "description": "price of outfit"
          },
          "note": {
            "type": "string",
            "description": "note of outfit"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of outfit"
          },
          "placeId": {
            "type": "string",
            "description": "place id of outfit"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Residence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the residence id",
            "format": "id"
          },
          "description": {
            "type": "string",
            "description": "description of residence"
          },
          "type": {
            "type": "string",
            "description": "type of residence"
          },
          "avgPrice": {
            "type": "string",
            "description": "average price of residence"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of residence"
          },
          "placeId": {
            "type": "string",
            "description": "place id of residence"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the review id",
            "format": "id"
          },
          "starRating": {
            "type": "number",
            "description": "star rating of review"
          },
          "pros": {
            "type": "string",
            "description": "pros of review"
          },
          "cons": {
            "type": "string",
            "description": "cons of review"
          },
          "username": {
            "type": "string",
            "description": "username of review"
          },
          "placeId": {
            "type": "string",
            "description": "place id of review"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "Souvenir": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the souvenir id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of souvenir"
          },
          "type": {
            "type": "string",
            "description": "type of souvenir"
          },
          "price": {
            "type": "string",
            "description": "price of souvenir"
          },
          "note": {
            "type": "string",
            "description": "note of souvenir"
          },
          "attachment": {
            "type": "string",
            "description": "attachment of souvenir"
          },
          "placeId": {
            "type": "string",
            "description": "place id of souvenir"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the user id",
            "format": "id"
          },
          "name": {
            "type": "string",
            "description": "name of user"
          },
          "email": {
            "uniqueItems": true,
            "type": "string",
            "description": "email of user"
          },
          "password": {
            "type": "string",
            "description": "password of user"
          },
          "role": {
            "type": "string",
            "description": "role of user"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "updateAt": {
            "type": "string",
            "description": "Timestamps"
          },
          "__v": {
            "type": "integer",
            "description": "Timestamps"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Slogan": {
            "type": "string"
          },
          "Overview": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Linkweb": {
            "type": "string"
          },
          "EventOfPlace": {
            "type": "number"
          },
          "likeCount": {
            "type": "number"
          },
          "attachment": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "inline_response_400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "places_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Slogan": {
            "type": "string"
          },
          "Overview": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Facebook": {
            "type": "string"
          },
          "LinkWeb": {
            "type": "string"
          },
          "EventOfPlace": {
            "type": "number"
          },
          "likeCount": {
            "type": "number"
          },
          "attachment": {
            "type": "string"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "articles_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          },
          "StartDate": {
            "type": "string"
          },
          "EndDate": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "events_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          },
          "StartDate": {
            "type": "string"
          },
          "EndDate": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "MiniType": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "Note": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "foods_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "MiniType": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "Note": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          },
          "StartDate": {
            "type": "string"
          },
          "EndDate": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "LocationId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "holidays_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Details": {
            "type": "string"
          },
          "StartDate": {
            "type": "string"
          },
          "EndDate": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "LocationId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Details": {
            "type": "string"
          },
          "Street": {
            "type": "string"
          },
          "Ward": {
            "type": "string"
          },
          "District": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "locations_add_body": {
        "type": "object",
        "properties": {
          "Details": {
            "type": "string"
          },
          "Street": {
            "type": "string"
          },
          "Ward": {
            "type": "string"
          },
          "District": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Gender": {
            "type": "string"
          },
          "RangeAge": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "Note": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "outfits_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Gender": {
            "type": "string"
          },
          "RangeAge": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "Note": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Description": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "AvgPrice": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "residences_add_body": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "AvgPrice": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_8": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "StarRating": {
            "type": "number"
          },
          "Pros": {
            "type": "string"
          },
          "Cons": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "reviews_add_body": {
        "type": "object",
        "properties": {
          "StarRating": {
            "type": "number"
          },
          "Pros": {
            "type": "string"
          },
          "Cons": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_9": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "Note": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "souvenirs_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "Note": {
            "type": "string"
          },
          "attachment": {
            "type": "string"
          },
          "PlaceId": {
            "type": "string"
          }
        }
      },
      "inline_response_200_10": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "Email": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "Role": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "__v": {
            "type": "integer"
          }
        }
      },
      "users_add_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "Role": {
            "type": "string"
          }
        }
      },
      "auth_register_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "Role": {
            "type": "string"
          }
        }
      },
      "auth_login_body": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "Role": {
            "type": "string"
          }
        }
      }
    }
  }
}